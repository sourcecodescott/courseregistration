variables:
  #EDIT THE SDK AND BUILD TOOLS TO MATCH YOUR GRADLE
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"

before_script:
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  - test

# lintDebug:
#   stage: build
#   script:
#     - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

#assembleDebug:
#  stage: build
#  script:
#    - ./gradlew assembleDebug
#  artifacts:
#    paths:
#    - app/build/outputs/

debugTests:
  stage: test
  script:
#    - ./gradlew test --info
    - ls $ANDROID_HOME
    - ls $ANDROID_HOME/build-tools
    - ls $ANDROID_HOME/tools
    - ls $ANDROID_HOME/tools/bin
    - ls $ANDROID_HOME/platform-tools
#    - $ANDROID_HOME/tools/android create avd -n my_android1.5
    - $ANDROID_HOME/tools/bin/sdkmanager  "system-images;android-23;google_apis;x86"
    - echo no | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name testAVD --package 'system-images;android-23;google_apis;x86'
    - adb devices
    - $ANDROID_HOME/tools/emulator -list-avds
    - $ANDROID_HOME/tools/emulator -avd testAVD
#    - $ANDROID_HOME/tools/android list targets
#    - $ANDROID_HOME/tools/emulator -avd
    - ./gradlew connectedAndroidTest
